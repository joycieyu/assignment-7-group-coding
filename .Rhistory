hard_week <- hours_per_week*1.5
hours_per_week <- 10000
hard_week <- hours_per_week*1.5
nums <- seq(100, 199)
first_ten <- nums [1,2,3,4,5,6,7,8,9,10]
first_ten <- nums [1,10]
first_ten <- nums [1:10]
phrase <- paste('My major is', major)
major <- 'Informatics'
phrase <- paste('My major is', major)
puppies <- 1000000
cost <- 0
total_cost <- 000
major <- 'Informatics'
classes <- c('cse142', 'info498f', 'stats221')
num_classes <- length(classes)
favorite_class <- classes[3]
hours_per_week <- 10000
access_token <- d1170a2c9666f3189407c19ff81bb5d7d459b360
access_token <- "d1170a2c9666f3189407c19ff81bb5d7d459b360"
access_token <- paste("https://api.github.com/users/joycieyu?access_token= d1170a2c9666f3189407c19ff81bb5d7d459b360")
access_token <- "https://api.github.com/users/joycieyu?access_token= d1170a2c9666f3189407c19ff81bb5d7d459b360"
library(jsonlite)
library(dplyr)
library(knitr)
name <- "INFO-498F"
access_token <- 'd1170a2c9666f3189407c19ff81bb5d7d459b360'
?data_frame
base_url <- 'https://api.github.com/users/mkfreeman?access_token='
user_request <- paste0(base_url, access_token)
user_request
base_url <- 'https://api.github.com/users/joycieyu?access_token='
user_request <- paste0(base_url, access_token)
user_request
user_info <- fromJSON(user_request)
user_info
base_url <- paste0('https://api.github.com/users/', name, '?access_token=')
user_request <- paste0(base_url, access_token)
user_request
user_info <- fromJSON(user_request)
user_info
?created
repo_url <- "https://api.github.com/users/", name, "/repos"
repo_url <- paste0("https://api.github.com/users/", name, "/repos")
repos_url <- paste0("https://api.github.com/users/", name, "/repos")
repos_request <- fromJSON(repos_url) %>% arrange(desc(created))
repos_request <- fromJSON(repos_url)
repos_request
View(repos_request)
?created()
View(arrange(repos_request, desc(created)))
arrange(repos_request, desc(created))
?fromJSON
repos_request <- fromJSON(repos_url, flatten = TRUE)
repos_request <- fromJSON(repos_url)
repos_url
repos_url <- paste0("https://api.github.com/users/", name, "/repos","?sort=created", "&per_page=100", "?access_token=", access_token)
repos_request <- fromJSON(repos_url)
flatten(repos_request)
View(repos_request)
num_repos <- nrows(repos_request)
is.data.frame(repos_request)
num_repos <- nrows(repos_request)
?nrows
?nrows()
num_repos <- repos_request %>% nrows(id)
num_repos <- nrow(repos_request)
num_repos
most_popular <- repos_request %>% select(forks_count == max(forks_count))
most_popular <- repos_request %>% select(filter(forks_count == max(forks_count))
most_popular
select(name)
access_token <- 'd1170a2c9666f3189407c19ff81bb5d7d459b360'
base_url <- paste0('https://api.github.com/users/', username, '?access_token=')
user_request <- paste0(base_url, access_token)
username <- "INFO-498F"
user_info <- fromJSON(user_request)
repos_url <- paste0("https://api.github.com/users/", username, "/repos","?sort=created", "&per_page=100", "?access_token=", access_token)
repos_request <- fromJSON(repos_url)
flatten(repos_request)
num_repos <- nrow(repos_request)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count) %>%
select(name)
most_popular
most_popular <- repos_request %>%
filter(forks_count == max(forks_count) %>%
select(name)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count)) %>%
select(name)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count)) %>%
select(name)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count)) %>%
select(name)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count)) %>%
select(names)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count)) %>%
select(names)
most_popular <- repos_request$names[which.max(forks_count)]
most_popular <- repos_request$names[which.max(forks_count)]
most_popular <- repos_request$names(forks_count [which.max(forks_count)])
most_popular <- repos_request$names[forks_count [which.max(forks_count)]]
most_popular <- repos_request$names[forks_count[which.max(forks_count)]]
repos_request$forks_count
filter(repos_request, forks_count == max(forks_count))
filter(repos_request, forks_count == max(forks_count))
filter(repos_request, forks_count == 1)
repos_request <- flatten(repos_request)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count)) %>%
select(names)
most_popular <- repos_request %>%
filter(forks_count == max(forks_count)) %>%
select(name)
most_popular
num_repos <- nrow(repos_request)
num_repos
`most_popular` is the most popular repository.
This is your username: `r username`.
You have `r num_repos` repositories.
`r most_popular` is the most popular repository.
user_info <- fromJSON(user_request)
user_info
avatar_url <- user_info$avatar_url
avatar_url
?format
repos_request <- mutate(repos_request, date_created = format(created_at))
View(repos_request)
repos_request <- mutate(repos_request, date_created = format(as.Date(created_at, "%m/%d/%Y"))
View(repos_request)
repos_request <- mutate(repos_request, date_created = format(as.Date(created_at, "%m/%d/%Y")))
View(repos_request)
repos_request$created_at
?data.frame
small_repos <- data.frame(repos_request, name, date_created, forks_count, id)
small_repos <- data.frame(repos_request$name, repos_request$date_created, repos_request$forks_count, repos_request$id)
is.data.frame(small_repos)
View(small_repos)
small_repos <- data.frame(repos_request, name, forks_count, id)
small_repos <- data.frame(repos_request, name, forks_count , id)
small_repos <- data.frame(name = repos_request$name, forks_count = repos_request$forks_count, id = repos_request$id, date_created = repos_request$date_created)
View(small_repos)
repos_request <- mutate(repos_request, date_created = format(created_at))
?names
names(small_repos$forks_count) <- forks
names(small_repos$forks_count) <- 'forks'
View(small_repos)
small_repos$forks_count
```{r, eval=TRUE}
```
?kable
summary <- repos_request %>% group_by(language) %>%
summarise(
num_repos = nrow()
avg_forks = mean(forks_count, na.rm = TRUE)
)
summary <- repos_request %>% group_by(language) %>%
summarise(
num_repos = nrow(),
avg_forks = mean(forks_count, na.rm = TRUE)
)
summary <- repos_request %>% group_by(language) %>%
summarise(
num_repos = nrow(id),
avg_forks = mean(forks_count, na.rm = TRUE)
)
repos_request$language
repos_request$forks_count
kable(summary)
is.data.frame(summary)
summary_table <- repos_request %>% group_by(language) %>%
summarise(
num_repos = nrow(id),
avg_forks = mean(forks_count, na.rm = TRUE)
)
summary_table <- repos_request %>% group_by(language) %>%
summarise(
num_repos = nrow(id),
avg_forks = mean(forks_count, na.rm = TRUE)
)
![alt text]('r avatar_url')
repos_request <- mutate(repos_request, date_created = format.Date(created_at))
small_repos <- data.frame(name = repos_request$name, forks_count = repos_request$forks_count, id = repos_request$id, date_created = repos_request$date_created)
user_info$avatar_url
small_repos <- data.frame(repos_request$name, repos_request$forks_count, repos_request$id, repos_request$date_created)
names(small_repos) <- c('name', 'forks_count', 'id', 'date_created')
kable(small_repos)
kable(summary_table)
ummary_table <- repos_request %>% group_by(language) %>%
summarise(
num_repos = length(id),
avg_forks = mean(forks_count, na.rm = TRUE)
)
kable(summary_table)
summary_table <- repos_request %>% group_by(language) %>%
summarise(
num_repos = length(id),
avg_forks = mean(forks_count, na.rm = TRUE)
)
View(summary_table)
kable(summary_table)
![your avatar](`r avatar_url`)
library(knitr)
library(dplyr)
library(plotly)
f <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_us_cities.csv')
df$hover <- paste(df$name, "Population", df$pop/1e6, " million")
df$q <- with(df, cut(pop, quantile(pop)))
levels(df$q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
df$q <- as.ordered(df$q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(df, lon = lon, lat = lat, text = hover,
marker = list(size = sqrt(pop/10000) + 1),
color = q, type = 'scattergeo', locationmode = 'USA-states') %>%
layout(title = '2014 US city populations<br>(Click legend to toggle)', geo = g)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_us_cities.csv')
df$hover <- paste(df$name, "Population", df$pop/1e6, " million")
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_us_cities.csv')
df$hover <- paste(df$name, "Population", df$pop/1e6, " million")
df$q <- with(df, cut(pop, quantile(pop)))
levels(df$q) <- paste(c("1st", "2nd", "3rd", "4th", "5th"), "Quantile")
df$q <- as.ordered(df$q)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
plot_ly(df, lon = lon, lat = lat, text = hover,
marker = list(size = sqrt(pop/10000) + 1),
color = q, type = 'scattergeo', locationmode = 'USA-states') %>%
layout(title = '2014 US city populations<br>(Click legend to toggle)', geo = g)
df <- read.csv('Mass-Shooting-Data.csv')
shootings <- write.csv("Mass-Shootings-Data.csv")
setwd(/Users/Joycie/info498f/a6-mapping-shootings)
setwd(Users/Joycie/info498f/a6-mapping-shootings)
setwd("Users/Joycie/info498f/a6-mapping-shootings")
getwd
getwd()
setwd("/info498f/a6-mapping-shootings")
source("summary.R")
source("scripts/summary.R")
setwd
getwd
getwd()
setwd("/Users/Joycie/info498f/assignment-7-group-coding")
source("scripts/summary.R")
library(dplyr)
library(plotly)
library(jsonlite)
setwd("/Users/Joycie/info498f/assignment-7-group-coding")
source("scripts/summary.R")
source("scripts/secondChart.R")
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv"))
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
setwd("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/")
setwd("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/")
setwd("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/")
setwd("https://raw.githubusercontent.com/joycieyu/assignment-7-group-coding/master/")
setwd("/Users/Joycie/info498f/assignment-7-group-coding")
info_function(data)
info_function(data)
make_plot(data)
kable(info_function(data))
library(knitr)
kable(info_function(data))
info_function(data)
?summarise()
summarise
summarise(ret)
?list()
kable(info_function(data)[['class_standing']])
<br>1. There are `r info_functon(data) [['Seahakws_fan']]` Seahawks fans
<br>2. There are also `r info_function(data) [['info_intended]]`  intended Informatics majors
<br>3. The person who has visited the most countries has visited `r info_function(data) [['most_countries']]` countries
<br> 1. There are `r info_functon(data) [['Seahakws_fan']]` Seahawks fans
"<br>" 1. There are `r info_functon(data) [['Seahakws_fan']]` Seahawks fans
"<br>" 2. There are also `r info_function(data) [['info_intended]]`  intended Informatics majors
"<br>" 3. The person who has visited the most countries has visited `r info_function(data) [['most_countries']]` countries
